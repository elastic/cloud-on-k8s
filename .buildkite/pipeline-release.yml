steps:
  - group: release
    steps:

      - label: "k8s manifests"
        if: |
          ( build.branch == "main" && build.source != "schedule" )
          || build.tag != null
          || build.message =~ /^buildkite test .*release.*/
        commands:
          - make generate-manifests
          - .buildkite/scripts/release/k8s-manifests.sh

      # dry run helm charts release
      - label: ":buildkite:"
        if: build.message =~ /^buildkite test .*release.*/
        command: buildkite-agent pipeline upload .buildkite/pipeline-release-helm.yml

      - label: "copy images to dockerhub"
        if: build.tag =~ /^v[0-9]+\.[0-9]+\.[0-9]+\$/
        trigger: unified-release-copy-elastic-images-to-dockerhub
        build:
          env:
            IMAGES_NAMES: "eck/eck-operator,eck/eck-operator-fips,eck/eck-operator-ubi8,eck/eck-operator-ubi8-fips"
            IMAGES_TAG: "${BUILDKITE_TAG}"

      # live helm charts release
      - label: ":buildkite:"
        if: |
          build.message !~ /^buildkite test .*release.*/
          && (
            ( build.branch == "main" && build.source != "schedule" )
            || build.tag != null
            || build.message =~ /^release eck/
          )
        command: |
          sed "s|DRY_RUN: true|DRY_RUN: false|" .buildkite/pipeline-release-helm.yml | buildkite-agent pipeline upload 

      - label: ":buildkite:"
        if: |
          build.message =~ /^buildkite test .*operatorhub.*/
          || build.message =~ /^release eck .*operatorhub.*/
        trigger: cloud-on-k8s-operator-redhat-release
        build:
          env:
            DRY_RUN: "${DRY_RUN:-true}"
