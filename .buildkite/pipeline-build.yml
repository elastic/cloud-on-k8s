steps:
  - group: build
    steps:

      # multiarch dockerx build for !PR branch
      - label: ":docker: multiarch operator image"
        key: "operator-image-build"
        commands:
          - .buildkite/scripts/build/setenv.sh
          - make -C .buildkite TARGET="generate-manifests publish-operator-multiarch-image" ci
          # save image for e2e-tests
          - buildkite-agent meta-data set operator-image $$(make print-operator-image)
        agents:
          provider: "gcp"
          image: "family/elastic-buildkite-agent-ubuntu-2004-lts"
          machineType: "n1-standard-16"
        artifact_paths:
          - config/*.yaml

      - label: ":docker: e2e-tests image"
        key: "e2e-tests-image-build"
        commands:
          - .buildkite/scripts/build/setenv.sh
          - make -C .buildkite TARGET="publish-e2e-multiarch-image" ci
          # save image for e2e-tests
          - buildkite-agent meta-data set e2e-image $$(make print-e2e-image)
        agents:
          provider: "gcp"
          image: "family/elastic-buildkite-agent-ubuntu-2004-lts"
          machineType: "n1-standard-16"

      # dev-license build for main nightly builds and tags (used in release build candidates)
      - label: ":docker: dev-license operator image"
        if: |
          build.tag != null
          || ( build.branch == "main" && build.source == "schedule" )
          || build.message =~ /^buildkite test .*dev-build.*/
          || build.env("GITHUB_PR_TRIGGER_COMMENT") =~ /s=[0-9\.]*-SNAPSHOT/
        key: "dev-operator-image-build"
        env:
          BUILD_LICENSE_PUBKEY: "dev"
          OPERATOR_VERSION_SUFFIX: "dev"
        commands:
          - .buildkite/scripts/build/setenv.sh
          - make -C .buildkite TARGET="publish-operator-multiarch-image" ci
        agents:
          provider: "gcp"
          image: "family/elastic-buildkite-agent-ubuntu-2004-lts"
          machineType: "n1-standard-16"

      # fips build for tag builds
      - label: ":docker: fips operator image"
        if: |
          build.tag != null 
          || build.message =~ /^buildkite test .*release.*/
        env:
          ENABLE_FIPS: "true"
        commands:
          - .buildkite/scripts/build/setenv.sh
          - make -C .buildkite TARGET="publish-operator-multiarch-image" ci
        agents:
          provider: "gcp"
          image: "family/elastic-buildkite-agent-ubuntu-2004-lts"
          machineType: "n1-standard-16"

      - label: ":go: helm releaser tool"
        commands:
          - cd hack/helm/release
          - make build
