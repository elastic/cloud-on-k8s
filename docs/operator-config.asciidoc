[id="{p}-operator-config"]
== Operator configuration

The operator exposes several configuration options. Unless otherwise noted, they can be set as environment variables or command line flags.


[width="70%",valign="middle",halign="center",options="header"]
|==========================
|Flag |Type|Default|Description

|log-verbosity |int |0 |Verbosity level of logs. -2=Error, -1=Warn, 0=Info, >0=Debug
|enable-debug-logs |bool |false |Enables debug logs. Equivalent to `log-verbosity=1`
|metrics-port |int |8080 |Port to use for exposing metrics in the Prometheus format. Set 0 to disable
|operator-roles |[]string |all |Roles this operator should assume. Valid values are namespace, global, webhook or all. Accepts multiple comma separated values. See <<{p}-ns-config>> for more information
|namespace |string |`""` |Namespace in which this operator should manage resources. Defaults to all namespaces. See <<{p}-ns-config>> for more information
|ca-cert-validity |duration (string) |1y |Duration representing how long before a newly created CA cert expires
|ca-cert-rotate-before |duration (string) |1d |Duration representing how long before expiration CA certificates should be reissued
|cert-validity |duration (string) |1y |Duration representing how long before a newly created TLS certificate expires
|cert-rotate-before |duration (string) |1d |Duration representing how long before expiration TLS certificates should be reissued
|auto-install-webhooks |bool |true |Enables automatic webhook installation
|operator-namespace |string |`""` |K8s namespace the operator runs in
|webhook-secret |string |`""` |K8s secret name mounted into /tmp/cert to be used for webhook certificates
|webhook-pods-label |string |`""` |K8s label to select pods running the operator
|development |bool |false |Enable developmenet mode. Only available as a CLI flag, not an environment variable
|debug-http-listen |string |localhost:6060 |Listen address for the debug HTTP server. Only available in development mode
|auto-port-forward |bool |false |Enables automatic port forwarding to allow running the operator outside the cluster. For dev use only as it exposes k8s resources on ephemeral ports to localhost
|==========================


Many of these should not need to be modified, but if necessary you can modify the operator YAML. For instance, to enable `DEBUG` level logs on the operator, restart it with the flag `--enable-debug-logs=true` like so:

[source,sh]
----
kubectl edit statefulset.apps -n elastic-system elastic-operator
----

and change the following lines from:

[source,yaml]
----
  spec:
    containers:
    - args:
      - manager
      - --operator-roles
      - all
      - --enable-debug-logs=false
----

to:

[source,yaml]
----
  spec:
    containers:
    - args:
      - manager
      - --operator-roles
      - all
      - --enable-debug-logs=true
----

[id="{p}-ns-config"]
=== Namespace and role configuration

The `operator-roles` and `namespace` flags have some intricacies that are worth discussing. A fully functioning operator will *require* both `global` and `namespace` roles running in the cluster (though potentially in different operator deployments). That is to say, with `--operator-roles=global,namespace` (or `--operator-roles=all`). If you want to limit the operator to a single namespace, you must set the `namespace` flag as well. For example `--operator-roles=global,namespace --namespace=my-namespace`. To have it listen on the entire cluster, you can simply omit the `namespace` flag.

The global role acts across namespaces and is not related to a specific deployment of the Elastic stack. The global operator deployed cluster-wide is responsible for high-level cross-cluster features (currently, enterprise licenses).
