:parent_page_id: elasticsearch-specification
:page_id: bundles-plugins
ifdef::env-github[]
****
link:https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-{parent_page_id}.html#k8s-{page_id}[View this document on the Elastic website]
****
endif::[]
[id="{p}-{page_id}"]
= Custom configuration files and plugins

To run Elasticsearch with specific plugins or configuration files installed on ECK, you have two options:

. Create a custom container image with the required plugins and configuration files. 
+
This option has the following pros and cons:
+
* Pro: Deployment is reproducible and reusable.
* Pro: Does not require internet access at runtime.
* Pro: Saves bandwidth and is quicker to start.
* Con: Requires a container registry and build infrastructure to build and host the custom image.
* Con: Version upgrades require building a new container image.

. Use init containers to install plugins and configuration files.
+
This option has the following pros and cons:
+
* Pro: Easier to get started and upgrade versions.
* Con: Requires pods to have internet access.
* Con: Adding new Elasticsearch nodes could randomly fail due to network issues or bad configuration.
* Con: Each Elasticsearch node needs to repeat the download, wasting bandwidth and slowing startup.
* Con: Deployment manifests are more complicated.

See <<{p}-custom-images,Creating custom images>> for instructions on how to build custom Docker images based on the official Elastic images.

The following example describes option 2, using a repository plugin. To install the plugin before the Elasticsearch
nodes start, use an init container to run the link:https://www.elastic.co/guide/en/elasticsearch/plugins/current/installation.html[plugin installation tool].

[source,yaml]
----
spec:
  nodeSets:
  - name: default
    count: 3
    podTemplate:
      spec:
        initContainers:
        - name: install-plugins
          command:
          - sh
          - -c
          - |
            bin/elasticsearch-plugin install --batch repository-azure
----

To install custom configuration files you can use volumes and volume mounts.

The next example shows how to add a synonyms file for the
link:https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-synonym-tokenfilter.html[synonym token filter] in Elasticsearch.
But you can use the same approach for any kind of file you want to mount into the configuration directory of Elasticsearch.

[source,yaml]
----
spec:
  nodeSets:
  - name: default
    count: 3
    podTemplate:
      spec:
        containers:
        - name: elasticsearch <1>
          volumeMounts:
          - name: synonyms
            mountPath: /usr/share/elasticsearch/config/dictionaries
        volumes:
        - name: synonyms
          configMap:
            name: synonyms <2>
----

<1> Elasticsearch runs by convention in a container called 'elasticsearch'.
<2> Assuming you have created a config map in the same namespace as Elasticsearch with the name 'synonyms' containing the synonyms file(s).
