[id="{p}-managing-compute-resources"]
== Managing compute resources

In order to help the Kubernetes scheduler make better decisions about how to place pods in available nodes and ensure quality of service (QoS), it is recommended to specify the CPU and memory requirements for objects managed by the operator (Elasticsearch, Kibana or APM Server). In Kubernetes parlance, `requests` defines the minimum amount of resources that must be available for a pod to start and `limits` defines the maximum amount of resources that a pod is allowed to consume. For more information about how Kubernetes uses these hints, see: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/[Managing Compute Resources for Containers].

[float]
[id="{p}-custom-resources"]
=== Set custom resources

Resource limits can be set in the `podTemplate` of objects managed by the operator.

For Elasticsearch objects, it is important to consider the heap size when setting resource requirements. An example can be found in the <<{p}-jvm-heap-size>> page.

For Kibana or APM Server objects, the `podTemplate` can be configured as follows:

[source,yaml]
----
spec:
  podTemplate:
    spec:
      containers:
      - name: kibana <1>
        resources:
          requests:
            memory: 1Gi
            cpu: 1
          limits:
            memory: 2Gi
            cpu: 2
----

<1> Replace with `kibana` or `apm-server` as appropriate.

[float]
[id="{p}-default-behavior"]
=== Default behavior

If `resources` is not defined in the specification of an object, then no `requests` or `limits` will be applied to the containers except in the case of Elasticsearch.
For Elasticsearch, if no memory request is set in the `podTemplate` spec, the operator applies a default memory request as described in the <<{p}-jvm-heap-size>> section. If your Kubernetes cluster is configured to enforce default resource limits using a `LimitRange` object, it could interfere with the operator default and cause object creation to fail. See <<{p}-jvm-heap-size>> for information on how to address this problem.
