[id="{p}-elasticsearch-specification"]
== Elasticsearch Specification

There are a number of settings which need to be considered before going into production related to Elasticsearch but also to Kubernetes.

**<<{p}-basic-settings>>**

- <<{p}-jvm-heap-size>>
- <<{p}-node-configuration>>
- <<{p}-http-settings-tls-sans>>
- <<{p}-pod-template>>
- <<{p}-resource-requests-limits>>
- Volume claim templates

**<<{p}-advanced-settings>>**

- Virtual memory
- <<{p}-custom-http-certificate>>
- Secure settings
- Custom plugins and bundles
- <<{p}-init-containers-plugin-downloads>>
- Pod disruption budget
- Change budget (maxUnavailable, maxSurge)

[id="{p}-basic-settings"]
== Basic settings

[id="{p}-jvm-heap-size"]
=== JVM heap size


[id="{p}-node-configuration"]
=== Node configuration

Any setting that can be configured in the `elasticsearch.yml` configuration file can be defined for each topology of nodes in the `spec.nodes[?].config` section.

[source,yaml]
----
spec:
  nodes:
  - nodeCount: 3
    config:
      node.master: true
      node.data: false
      node.ingest: false
      node.ml: false
      xpack.ml.enabled: true
      cluster.remote.connect: false
  - nodeCount: 10
    config:
      node.master: false
      node.data: true
      node.ingest: true
      node.ml: true
      cluster.remote.connect: false
----

For more information on Elasticsearch settings, see https://www.elastic.co/guide/en/elasticsearch/reference/current/settings.html[Configuring Elasticsearch].

[id="{p}-http-settings-tls-sans"]
=== HTTP settings & TLS SANs

You can change the type of the Kubernetes service used to expose Elasticsearch in https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types[different ways] in the `spec.http.service.spec` section.

[source,yaml]
----
spec:
  http:
    service:
      spec:
        type: LoadBalancer
----

You can add an IP or a DNS name in the SAN of the self-signed certificate configured by default to secure the HTTP layer with TLS in the `spec.http.tls.selfSignedCertificate` section.

[source,yaml]
----
spec:
  http:
    tls:
      selfSignedCertificate:
        subjectAltNames:
        - ip: 1.2.3.4
        - dns: hulk.example.com
----

[id="{p}-advanced-settings"]
== Advanced Settings

[id="{p}-custom-http-certificate"]
=== Custom HTTP certificate

You can provide your own CA and certificates instead of the self-signed certificate to connect to Elasticsearch via HTTPS using a Kubernetes secret.

You need to reference the name of a secret that contains a TLS private key and a certificate (or a chain), in the `spec.http.tls.certificate` section.

[source,yaml]
----
spec:
  http:
    tls:
      certificate:
        secretName: my-cert
----

Example to create a Kubernetes TLS secret with a self-signed certificate:

[source,sh]
----
$ openssl req -x509 -newkey rsa:4096 -keyout tls.key -out tls.crt -days 365 -nodes
$ kubectl create secret tls my-cert --cert tls.crt --key tls.key
----


[id="{p}-pod-template"]
=== Pod Template

Pod templates are the same pod templates you know and love from stateful sets and deployments. You can provide your own to add new settings or merge settings with our defaults. For instance, if you want to add new labels to your pods, you can apply a pod template like so:

[source,yaml]
----
    podTemplate:
      metadata:
        labels:
          # additional labels for pods
          foo: bar
----


More common is setting resource requests and limits, which is covered in the section <<{p}-resource-requests-limits>>.

You may want to also install additional plugins, which is described in the <<{p}-init-containers-plugin-downloads>> section.

You may want to set environment variables to configure Elasticsearch, for instance to set the minimum and maximum heap size to `2g` and `4g` respectively you may modify the environment variables of the `elasticsearch` container as follows:

[source,yaml]
----
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: "-Xms2g -Xmx4g"
----


You can also refer to the Kubernetes documentation here for more information on pod templates:
https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/#pod-templates[Pod Templates Overview]

https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#podtemplatespec-v1-core[Pod Template Spec API Reference]


[id="{p}-resource-requests-limits"]
=== Resource Requests and Limits

Resource requests and limits define how much RAM and CPU each individual container requires and how much they are allowed to use. You may want to set these in addition to the heap size as mentioned , though by default we will set the heap size to half of the container memory limit.

To set the minimum and maximum memory of the `elasticsearch` container, as well as the minimum and maximum CPU resources, you would modify the pod template in your Elasticsearch spec as follows.
[source,yaml]
----
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: "16Gi"
              cpu: "250m"
            limits:
              memory: "32Gi"
              cpu: "4"
----

The https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/[Kubernetes documentation] has more detail on managing compute resources for containers.

[id="{p}-init-containers-plugin-downloads"]
=== Init containers for plugin downloads

To install a custom plugin, you can install them before the Elasticsearch container starts with an initContainer. For example:

[source,yaml]
----
  - podTemplate:
      spec:
        initContainers:
        - name: install-plugins
          image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0"
          command:
          - sh
          - -c
          - |
            bin/elasticsearch-plugin install --batch repository-gcs
----

You can also override the Elasticsearch container image to use your own image with the plugins already installed. The link:snapshots.asciidoc[snapshots] doc has more information on both of these options.
