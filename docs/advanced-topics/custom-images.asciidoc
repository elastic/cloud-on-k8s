:page_id: custom-images
ifdef::env-github[]
****
link:https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-{page_id}.html[View this document on the Elastic website]
****
endif::[]
[id="{p}-{page_id}"]
= Create custom images

You can create your own custom application images ({eck_resources_list}) instead of using the base images provided by Elastic. You might want to do this to have a canonical image with all the necessary plugins pre-loaded rather than <<{p}-init-containers-plugin-downloads,installing them through an init container>> each time a Pod starts.  You must use the official image as the base for custom images. For example, if you want to create an Elasticsearch {version} image with the link:https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html[ICU Analysis Plugin], you can do the following:



. Create a `Dockerfile` containing:
+
[subs="attributes"]
----
FROM docker.elastic.co/elasticsearch/elasticsearch:{version}
RUN bin/elasticsearch-plugin install --batch analysis-icu
----

. Build the image with:
+
[subs="attributes"]
----
docker build --tag elasticsearch-icu:{version}
----

There are various hosting options for your images. If you use Google Kubernetes Engine, it is automatically configured to use the Google Container Registry. Check https://cloud.google.com/container-registry/docs/using-with-google-cloud-platform#google-kubernetes-engine[Using Container Registry with Google Cloud] for more information. To use the image, you can then https://cloud.google.com/container-registry/docs/pushing-and-pulling#pushing_an_image_to_a_registry[push to the registry] with:

[subs="attributes"]
----
docker tag elasticsearch-icu:{version} gcr.io/$PROJECT-ID/elasticsearch-icu:{version}
docker push gcr.io/$PROJECT-ID/elasticsearch-icu:{version}
----


Configure your Elasticsearch specification to use the newly pushed image, for example:

[source,yaml,subs="attributes"]
----
spec:
  version: {version}
  image: gcr.io/$PROJECT-ID/elasticsearch-icu:{version}
----

NOTE: Providing the correct version is always required as ECK reasons about APIs and capabilities available to it based on the version field.

The steps are similar for https://docs.microsoft.com/en-us/azure/aks/tutorial-kubernetes-prepare-acr[Azure Kubernetes Service] and https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-basics.html#use-ecr[AWS Elastic Container Registry].

If your custom images follow the naming convention adopted by the official images, and you only want to use your custom images, you can also simply <<{p}-container-registry-override, override the container registry>>.

For more information, check the following references:

- https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_c_customized_image[Elasticsearch documentation on Using custom Docker images]
- https://cloud.google.com/container-registry/docs/how-to[Google Container Registry]
- https://docs.microsoft.com/en-us/azure/container-registry/[Azure Container Registry]
- https://docs.aws.amazon.com/AmazonECR/latest/userguide/what-is-ecr.html[Amazon Elastic Container Registry]
- https://docs.openshift.com/container-platform/4.12/registry/index.html[OpenShift Container Platform registry]

