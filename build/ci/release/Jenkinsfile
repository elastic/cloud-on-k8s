pipeline {

    agent {
        label 'linux'
    }

    environment {
        VAULT_ADDR = credentials('vault-addr')
        VAULT_ROLE_ID = credentials('vault-role-id')
        VAULT_SECRET_ID = credentials('vault-secret-id')
        REGISTRY = 'push.docker.elastic.co'
        REPOSITORY = 'eck'
        IMG_NAME = 'eck-operator'
        IMG_SUFFIX = ''
        LATEST_RELEASED_IMG = "docker.elastic.co/${REPOSITORY}/${IMG_NAME}:${TAG_NAME}"
    }

    options {
        timeout(time: 1, unit: 'HOURS')
    }

    stages {
        stage('Build and push release image') {
            steps {
                sh 'make -C build/ci ci-release'
            }
        }
        stage('Upload yaml to S3') {
            steps {
                sh 'make -C build/ci yaml-upload'
            }
        }
    }

    post {
        success {
            script {
                def msg = "${LATEST_RELEASED_IMG} was pushed \r\n" +
                          "https://download.elastic.co/downloads/eck/${TAG_NAME}/all-in-one.yaml was uploaded \r\n" +
                          "Congratulations!"
                slackSend botUser: true,
                    channel: '#cloud-k8s',
                    color: 'good',
                    message: msg,
                    tokenCredentialId: 'cloud-ci-slack-integration-token'
            }
        }
        unsuccessful {
            script {
                def msg = "Release job failed! \r\n" +
                          "${BUILD_URL}"
                slackSend botUser: true,
                    channel: '#cloud-k8s',
                    color: 'danger',
                    message: msg,
                    tokenCredentialId: 'cloud-ci-slack-integration-token'
            }
        }
        cleanup {
            cleanWs()
        }
    }

}
