pipeline {

    agent {
        label 'linux'
    }

    options {
        timeout(time: 30, unit: 'MINUTES')
    }

    environment {
        VAULT_ADDR = credentials('vault-addr')
        VAULT_ROLE_ID = credentials('vault-role-id')
        VAULT_SECRET_ID = credentials('vault-secret-id')
        REGISTRY = "push.docker.elastic.co"
        REPOSITORY = "eck"
        IMG_NAME = "eck-ci"
        IMAGE = "${REGISTRY}/${REPOSITORY}/${IMG_NAME}:latest"
    }

    stages {
        stage('Git checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build Docker image') {
            when {
                expression {
                    ifImageNeedsRebuilding()
                }
            }
            steps {
                sh 'make -C build/ci ci-build-image'
            }
        }
    }

    post {
        cleanup {
            cleanWs()
        }
    }

}

def ifImageNeedsRebuilding() {
    def dockerfile = sh (
        script: "git diff --name-status HEAD~1 HEAD | grep -v build/ci/Dockerfile",
    	returnStatus: true
    )
    def operator = sh (
        script: "git diff --name-status HEAD~1 HEAD | grep -v operators/Gopkg.lock",
    	returnStatus: true
    )
    def volume = sh (
        script: "git diff --name-status HEAD~1 HEAD | grep -v local-volume/Gopkg.lock",
        returnStatus: true
    )
    return dockerfile == 1 || operator == 1 || volume == 1
}
