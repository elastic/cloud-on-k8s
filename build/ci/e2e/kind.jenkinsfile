pipeline {

    agent {
        label 'eck'
    }

    options {
        timeout(time: 150, unit: 'MINUTES')
    }

    stages {
        stage('Run tests for different vanilla K8s versions with kind') {
            parallel {
                stage("1.14") {
                    steps {
                        checkout scm
                        createKindConfig("kindest/node:v1.14.3")
                        sh 'make -C build/ci TARGET=kind-e2e ci'
                    }
                }
                stage("1.15") {
                    agent {
                        label 'eck'
                    }
                    steps {
                        checkout scm
                        createKindConfig("kindest/node:v1.15.0")
                        sh 'make -C build/ci TARGET=kind-e2e ci'
                    }
                }
            }
        }
    }

    post {
        unsuccessful {
            script {
                def msg = "E2E tests for different vanilla K8s versions failed!\r\n" + env.BUILD_URL
                slackSend botUser: true,
                      channel: '#cloud-k8s',
                      color: 'danger',
                      message: msg,
                      tokenCredentialId: 'cloud-ci-slack-integration-token'
            }
        }
        cleanup {
            cleanWs()
        }
    }

}

def createKindConfig(node) {
    sh """
        cat >.env <<EOF
KIND_NODE_IMAGE = ${node}
EOF
    """
}