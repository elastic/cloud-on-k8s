pipeline {

    agent {
        label 'eck'
    }

    options {
        timeout(time: 150, unit: 'MINUTES')
    }

    stages {
        stage('Run tests for different vanilla K8s versions with kind') {
            parallel {
                stage("1.14") {
                    environment {
                        KIND_NODE_IMAGE = "kindest/node:v1.14.3"
                    }
                    steps {
                        checkout scm
                        createKindConfig()
                        sh """
                            make -C build/ci TARGET=dep-vendor-only ci
                            make kind-e2e-cluster
                            make -C build/ci TARGET=kind-e2e-run ci
                        """
                    }
                }
                stage("1.15") {
                    agent {
                        label 'eck'
                    }
                    environment {
                        KIND_NODE_IMAGE = "kindest/node:v1.15.0"
                    }
                    steps {
                        checkout scm
                        createKindConfig()
                        sh """
                            make -C build/ci TARGET=dep-vendor-only ci
                            make kind-e2e-cluster
                            make -C build/ci TARGET=kind-e2e-run ci
                        """
                    }
                }
            }
        }
    }

    post {
        unsuccessful {
            script {
                if (params.SEND_NOTIFICATIONS) {
                    def msg = "E2E tests for different vanilla K8s versions failed!\r\n" + env.BUILD_URL
                    slackSend botUser: true,
                        channel: '#cloud-k8s',
                        color: 'danger',
                        message: msg,
                        tokenCredentialId: 'cloud-ci-slack-integration-token'
                }
            }
        }
        cleanup {
            cleanWs()
        }
    }

}

def createKindConfig() {
    sh """
        cat >.env <<EOF
KIND_NODE_IMAGE = ${KIND_NODE_IMAGE}
ECK_IMAGE = ${ECK_IMAGE}
IMG_SUFFIX = -ci
EOF
    """
}
