pipeline {

    agent {
        label 'linux'
    }

    options {
        timeout(time: 150, unit: 'MINUTES')
    }

    environment {
        VAULT_ADDR = credentials('vault-addr')
        VAULT_ROLE_ID = credentials('vault-role-id')
        VAULT_SECRET_ID = credentials('vault-secret-id')
    }

    stages {
        stage('Checkout from GitHub') {
            steps {
                checkout scm
            }
        }
        stage('Run Checks') {
            steps {
                sh 'make -C build/ci TARGET=ci-check ci'
            }
        }
        stage("Run E2E tests") {
            steps {
                sh """
                    cat >.env <<EOF
REGISTRY = cloudonk8s.azurecr.io
REPOSITORY = operators
IMG_SUFFIX = -ci
CRD_FLAVOR = trivial-versions
E2E_JSON = true
EOF
                    cat >deployer-config.yml <<EOF
id: aks-ci
overrides:
  clusterName: $BUILD_TAG
  vaultInfo:
    address: $VAULT_ADDR
    roleId: $VAULT_ROLE_ID
    secretId: $VAULT_SECRET_ID
EOF
                """
                script {
                    env.SHELL_EXIT_CODE = sh(returnStatus: true, script: 'make -C build/ci TARGET=ci-e2e ci')

                    sh 'make -C build/ci TARGET=e2e-generate-xml ci'
                    junit "e2e-tests.xml"

                    sh 'exit $SHELL_EXIT_CODE'
                }
            }
        }
    }

    post {
        cleanup {
            script {
                sh """
                    cat >deployer-config.yml <<EOF
id: aks-ci
overrides:
  operation: delete
  kubernetesVersion: "1.12.8"
  clusterName: $BUILD_TAG
  vaultInfo:
    address: $VAULT_ADDR
    roleId: $VAULT_ROLE_ID
    secretId: $VAULT_SECRET_ID
EOF
                    make -C build/ci TARGET=run-deployer ci
                """
            }
            cleanWs()
        }
    }
}
