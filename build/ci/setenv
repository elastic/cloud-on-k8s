#!/usr/bin/env bash

# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
# or more contributor license agreements. Licensed under the Elastic License;
# you may not use this file except in compliance with the Elastic License.

# Script to set environment variables to run CI tasks.
#
# Usage: setenv CONTEXT
#
#   CONTEXT      test or release (test by default)
#                Note: the GCLOUD_PROJECT env var must be set for `test`.

set -eu

REGISTRY=docker.elastic.co
IMG_NAME=eck-operator

# Variables that can be provided in a CI context
WORKSPACE=${WORKSPACE:-$(pwd)}
TAG_NAME=${TAG_NAME:-""}

reset() {
    rm -f .env
}

setup_vars() {
    # the presence of the TAG_NAME env var indicates the build of a release
    if [[ ${TAG_NAME} != "" ]]; then
        # release build
        REPOSITORY=eck
        SNAPSHOT=false
        VERSION=${TAG_NAME}
    else
        # nightly build
        REPOSITORY=eck-snapshots
        SNAPSHOT=true
        VERSION=$(cat $WORKSPACE/VERSION)-$(date +%F)-$(git rev-parse --short --verify HEAD)
    fi

    OPERATOR_IMAGE=${REGISTRY}/${REPOSITORY}/${IMG_NAME}:${VERSION}
}

add_var() {
    local key=$1 value=$2
    echo "$key = $value" >> .env
}

# write env vars in an .env file which is sourced by the root Makefile
write_env() {
    local context=$1

    # reset
    > .env

    # add base variables
    add_var REGISTRY        ${REGISTRY}
    add_var IMG_NAME        ${IMG_NAME}
    add_var REPOSITORY      ${REPOSITORY}
    add_var SNAPSHOT        ${SNAPSHOT}
    add_var VERSION         ${VERSION}
    add_var OPERATOR_IMAGE  ${OPERATOR_IMAGE}

    # add specific variables depending the context
    case $context in
        test)
            add_var GCLOUD_PROJECT  ${GCLOUD_PROJECT}
        ;;
        release)
            add_var GO_TAGS                 release
            add_var ELASTIC_DOCKER_LOGIN    eckadmin
            add_var "export LICENSE_PUBKEY" /go/src/github.com/elastic/cloud-on-k8s/build/ci/license.key
        ;;
    esac
}

main() {
    local context=${1:-"test"} # test or release

    setup_vars
    write_env $context
}

main "$@"
