apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat
  namespace: {{ .E2ENamespace }}
  labels:
    k8s-app: filebeat
spec:
  type: filebeat
  version: 7.9.1
  config:
    max_backoff: 1s # reduces worst case delay between log being written and picked up by Filebeat to 1s
    close_inactive: 1h # keep harvester open for 1h on inactive files as our test timeout is longer than default 5m
    filebeat.autodiscover:
      providers:
      - type: kubernetes
        host: ${NODE_NAME}
        hints.enabled: true
        hints.default_config:
          type: container
          paths:
          - /var/log/containers/*${data.kubernetes.container.id}.log
          fields_under_root: true
          fields:
            pipeline: {{ .Pipeline }}
            build_number: {{ .BuildNumber }}
            provider: {{ .Provider }}
            clusterName: {{ .ClusterName }}
            kubernetes_version: {{ .KubernetesVersion }}
            stack_version: {{ .ElasticStackVersion }}
            e2e_test_id: {{ .Pipeline }}-{{ .BuildNumber }}-{{ .Provider }}-{{ .ClusterName }}-{{ .KubernetesVersion }}-{{ .ElasticStackVersion }}
        appenders:
        - type: config
          condition:
            equals:
              kubernetes.pod.labels.control-plane: {{ .Operator.Name }}
          config:
            json.keys_under_root: true
            processors:
            - convert:
                mode: rename
                ignore_missing: true
                fields:
                - { from: error, to: _error}
                - { from: source, to: event.source }
            - convert:
                mode: rename
                ignore_missing: true
                fields:
                - { from: _error, to: error.message }
    processors:
    - add_cloud_metadata: {}
    - add_host_metadata: {}
    setup.template.overwrite: true
    setup.template.append_fields:
    - name: kubernetes_version
      type: keyword
    - name: build_number
      type: keyword
    output.elasticsearch:
      hosts: ['https://${monitoring_ip}:9200']
      username: ${monitoring_user}
      password: ${monitoring_pass}
      ssl.certificate_authorities:
      - /mnt/elastic/monitoring-ca.crt
  secureSettings:
  - secretName: "eck-{{ .TestRun }}"
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: filebeat
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        initContainers:
        - name: elastic-internal-init-keystore
          securityContext:
            runAsUser: 0
        containers:
        - name: filebeat
          securityContext:
            runAsUser: 0
            {{ if .OcpCluster }}
            privileged: true
            {{end}}
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
          - name: monitoring-ca
            mountPath: /mnt/elastic/monitoring-ca.crt
            readOnly: true
            subPath: monitoring_ca
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: monitoring-ca
          secret:
            secretName: "eck-{{ .TestRun }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: {{ .E2ENamespace }}
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: {{ .E2ENamespace }}
  labels:
    k8s-app: filebeat
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elastic-filebeat-restricted
  namespace: {{ .E2ENamespace }}
  labels:
    test-run: {{ .TestRun }}
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    resourceNames:
      - elastic.beat.restricted
    verbs:
      - use
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elastic-filebeat-restricted-binding
  namespace: {{ .E2ENamespace }}
  labels:
    test-run: {{ .TestRun }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: elastic-filebeat-restricted
subjects:
  - kind: ServiceAccount
    name: filebeat
---
{{ if .OcpCluster }}
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: beat
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: true
allowHostPID: true # required for Auditbeat
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities:
  - AUDIT_READ     # required for Auditbeat
  - AUDIT_WRITE
  - AUDIT_CONTROL
  - NET_ADMIN      # required for Packetbeat
  - KILL           # required for Journalbeat
  - CHOWN
  - FSETID
  - FOWNER
  - SETGID
  - SETUID
  - SETFCAP
  - SETPCAP
  - AUDIT_WRITE
  - NET_BIND_SERVICE
defaultAddCapabilities: []
fsGroup:
  type: RunAsAny
priority: 0
readOnlyRootFilesystem: false
requiredDropCapabilities: []
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
  - '*'
supplementalGroups:
  type: RunAsAny
users:
  - system:serviceaccount:{{ .E2ENamespace }}:filebeat
  - system:serviceaccount:{{ .E2ENamespace }}:metricbeat
groups:
{{- range .Operator.ManagedNamespaces }}
  - system:serviceaccounts:{{ . }}
{{- end }}
volumes:
  - '*'
{{end}}
