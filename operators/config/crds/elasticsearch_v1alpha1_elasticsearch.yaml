apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: elasticsearches.elasticsearch.k8s.elastic.co
spec:
  additionalPrinterColumns:
  - JSONPath: .status.health
    name: health
    type: string
  - JSONPath: .status.availableNodes
    description: Available nodes
    name: nodes
    type: integer
  - JSONPath: .spec.version
    description: Elasticsearch version
    name: version
    type: string
  - JSONPath: .status.phase
    name: phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: age
    type: date
  group: elasticsearch.k8s.elastic.co
  names:
    categories:
    - elastic
    kind: Elasticsearch
    plural: elasticsearches
    shortNames:
    - es
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            expose:
              description: 'Expose determines which service type to use for this workload.
                The options are: `ClusterIP|LoadBalancer|NodePort`. Defaults to ClusterIP.'
              enum:
              - ClusterIP
              - LoadBalancer
              - NodePort
              type: string
            featureFlags:
              description: FeatureFlags are instance-specific flags that enable or
                disable specific experimental features
              type: object
            image:
              description: Image represents the docker image that will be used.
              type: string
            licenseType:
              description: LicenseType represents the expected license type for this
                cluster. Will default to "basic" if not set.
              enum:
              - basic
              - trial
              - gold
              - platinum
              type: string
            nodes:
              description: Nodes represents a list of groups of nodes with the same
                configuration to be part of the cluster
              items:
                properties:
                  config:
                    description: Config represents Elasticsearch configuration.
                    type: object
                  nodeCount:
                    description: NodeCount defines how many nodes have this topology
                    format: int32
                    type: integer
                  resources:
                    description: Resources to be allocated for this topology
                    properties:
                      limits:
                        description: Limits represents the limits to considerate for
                          these resources
                        type: object
                    type: object
                  template:
                    description: PodTemplate is the object that describes the Elasticsearch
                      pods.
                    properties:
                      metadata:
                        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                        type: object
                      spec:
                        description: 'Specification of the desired behavior of the
                          pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                        properties:
                          affinity:
                            description: Affinity is the pod's scheduling constraints
                            type: object
                        type: object
                    type: object
                  volumeClaimTemplates:
                    description: 'VolumeClaimTemplates is a list of claims that pods
                      are allowed to reference. Every claim in this list must have
                      at least one matching (by name) volumeMount in one container
                      in the template. A claim in this list takes precedence over
                      any volumes in the template, with the same name. TODO: Define
                      the behavior if a claim already exists with the same name. TODO:
                      define special behavior based on claim metadata.name. (e.g data
                      / logs volumes)'
                    items:
                      type: object
                    type: array
                type: object
              type: array
            secureSettings:
              description: SecureSettings reference a secret containing secure settings,
                to be injected into Elasticsearch keystore on each node. It must exist
                in the same namespace as the Elasticsearch resource. Secret keys must
                start with `es.file.` or `es.string.` according to the secure setting
                type.
              properties:
                secretName:
                  type: string
              required:
              - secretName
              type: object
            setVmMaxMapCount:
              description: SetVMMaxMapCount indicates whether an init container should
                be used to ensure that the `vm.max_map_count` is set according to
                https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html.
                Setting this to true requires the kubelet to allow running privileged
                containers. Defaults to true if not specified. To be disabled, it
                must be explicitly set to false.
              type: boolean
            updateStrategy:
              description: UpdateStrategy specifies how updates to the cluster should
                be performed.
              properties:
                changeBudget:
                  description: ChangeBudget is the change budget that should be used
                    when performing mutations to the cluster.
                  properties:
                    maxSurge:
                      description: 'MaxSurge is the maximum number of pods that can
                        be scheduled above the original number of pods. By default,
                        a fixed value of 1 is used. Value can be an absolute number
                        (ex: 5) or a percentage of total pods at the start of the
                        update (ex: 10%). This can not be 0 if MaxUnavailable is 0
                        if you want automatic rolling updates to be applied. Absolute
                        number is calculated from percentage by rounding up. Example:
                        when this is set to 30%, the new group can be scaled up by
                        30% immediately when the rolling update starts. Once old pods
                        have been killed, new group can be scaled up further, ensuring
                        that total number of pods running at any time during the update
                        is at most 130% of the target number of pods.'
                      format: int64
                      type: integer
                    maxUnavailable:
                      description: 'MaxUnavailable is the maximum number of pods that
                        can be unavailable during the update. Value can be an absolute
                        number (ex: 5) or a percentage of total pods at the start
                        of update (ex: 10%). Absolute number is calculated from percentage
                        by rounding down. This can not be 0 if MaxSurge is 0 if you
                        want automatic rolling changes to be applied. By default,
                        a fixed value of 0 is used. Example: when this is set to 30%,
                        the group can be scaled down by 30% immediately when the rolling
                        update starts. Once new pods are ready, the group can be scaled
                        down further, followed by scaling up the group, ensuring that
                        at least 70% of the target number of pods are available at
                        all times during the update.'
                      format: int64
                      type: integer
                  required:
                  - maxUnavailable
                  - maxSurge
                  type: object
                groups:
                  description: Groups is a list of groups that should have their cluster
                    mutations considered in a fair manner with a strict change budget
                    (not allowing any surge or unavailability) before the entire cluster
                    is reconciled with the full change budget.
                  items:
                    properties:
                      selector:
                        description: Selector is the selector used to match pods.
                        type: object
                    type: object
                  type: array
              type: object
            version:
              description: Version represents the version of the stack
              type: string
          type: object
        status:
          properties:
            clusterUUID:
              type: string
            health:
              type: string
            masterNode:
              type: string
            phase:
              type: string
            remoteClusters:
              type: object
            service:
              type: string
            zenDiscovery:
              properties:
                minimumMasterNodes:
                  format: int64
                  type: integer
              type: object
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
