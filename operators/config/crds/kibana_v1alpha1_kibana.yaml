apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: kibanas.kibana.k8s.elastic.co
spec:
  additionalPrinterColumns:
  - JSONPath: .status.health
    name: health
    type: string
  - JSONPath: .status.availableNodes
    description: Available nodes
    name: nodes
    type: integer
  - JSONPath: .spec.version
    description: Kibana version
    name: version
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: age
    type: date
  group: kibana.k8s.elastic.co
  names:
    categories:
    - elastic
    kind: Kibana
    plural: kibanas
    shortNames:
    - kb
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            elasticsearch:
              description: Elasticsearch configures how Kibana connects to Elasticsearch
              properties:
                auth:
                  description: Auth configures authentication for Kibana to use.
                  properties:
                    inline:
                      description: Inline is auth provided as plaintext inline credentials.
                      properties:
                        password:
                          description: Password is the password to use.
                          type: string
                        username:
                          description: User is the username to use.
                          type: string
                      required:
                      - username
                      - password
                      type: object
                    secret:
                      type: object
                  type: object
                caCertSecret:
                  description: CaCertSecret names a secret that contains a CA file
                    entry to use.
                  type: string
                url:
                  description: ElasticsearchURL is the URL to the target Elasticsearch
                  type: string
              required:
              - url
              type: object
            elasticsearchRef:
              description: ElasticsearchRef references an Elasticsearch resource in
                the Kubernetes cluster. If the namespace is not specified, the current
                resource namespace will be used.
              properties:
                name:
                  type: string
                namespace:
                  type: string
              required:
              - name
              type: object
            featureFlags:
              description: FeatureFlags are instance-specific flags that enable or
                disable specific experimental features
              type: object
            http:
              description: HTTP contains settings for HTTP.
              properties:
                service:
                  description: Service is a template for the Kubernetes Service
                  properties:
                    metadata:
                      description: Metadata is metadata for the HTTP Service.
                      properties:
                        annotations:
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                      type: object
                    spec:
                      description: Spec contains user-provided settings for the HTTP
                        Service.
                      properties:
                        type:
                          description: 'Type determines which service type to use
                            for this workload. The options are: `ClusterIP|LoadBalancer|NodePort`.
                            Defaults to ClusterIP.'
                          enum:
                          - ClusterIP
                          - LoadBalancer
                          - NodePort
                          type: string
                      type: object
                  type: object
                tls:
                  description: TLS describe additional options to consider when generating
                    nodes TLS certificates.
                  properties:
                    selfSignedCertificate:
                      description: SelfSignedCertificate define options to apply to
                        self-signed certificate managed by the operator.
                      properties:
                        subjectAltNames:
                          description: 'SubjectAlternativeNames is a list of SANs
                            to include in the nodes certificates. For example: a wildcard
                            DNS to expose the cluster.'
                          items:
                            properties:
                              dns:
                                type: string
                              ip:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              type: object
            image:
              description: Image represents the docker image that will be used.
              type: string
            nodeCount:
              description: NodeCount defines how many nodes the Kibana deployment
                must have.
              format: int32
              type: integer
            resources:
              description: Resources to be allocated for this topology
              properties:
                limits:
                  description: Limits represents the limits to considerate for these
                    resources
                  type: object
              type: object
            version:
              description: Version represents the version of Kibana
              type: string
          type: object
        status:
          properties:
            associationStatus:
              type: string
            health:
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
