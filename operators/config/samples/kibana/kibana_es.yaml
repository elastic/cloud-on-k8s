# This sample sets up an Elasticsearch cluster and a Kibana instance preconfigured for that cluster
apiVersion: associations.k8s.elastic.co/v1alpha1
kind: KibanaElasticsearchAssociation
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: kibana-es-sample
spec:
  elasticsearch:
    name: "elasticsearch-sample"
    namespace: "default"
  kibana:
    name: "kibana-sample"
    namespace: "default"
---
apiVersion: elasticsearch.k8s.elastic.co/v1alpha1
kind: Elasticsearch
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: elasticsearch-sample
spec:
  version: "6.7.0"
  updateStrategy:
    groups:
    # give each failure domain a chance to reconcile failures before regular changes:
    - selector:
        matchLabels:
          failure-domain.beta.kubernetes.io/zone: europe-west3-a
    - selector:
        matchLabels:
          failure-domain.beta.kubernetes.io/zone: europe-west3-b
    - selector:
        matchLabels:
          failure-domain.beta.kubernetes.io/zone: europe-west3-c
    changeBudget:
      # this is the equivalent of the default change budget
      maxSurge: 1
      maxUnavailable: 1
  nodes:
  - config:
      node.master: true
      node.data: true
      xpack.license.self_generated.type: trial
      node.attr.attr_name: attr_value
    resources:
      limits:
        memory: 1Gi
        cpu: 1000m
    nodeCount: 3
    ## this shows how to add a custom label to all pods created for this topology element
    #template:
    #  metadata:
    #    labels:
    #      foo: bar
    ## this shows how to request 2Gi of persistent data storage for pods in this topology element
    #volumeClaimTemplates:
    #- metadata:
    #    name: data
    #  spec:
    #    accessModes:
    #    - ReadWriteOnce
    #    resources:
    #      requests:
    #        storage: 2Gi
  # dedicated masters:
  - config:
      node.master: true
      node.data: false
      node.ingest: false
      node.attr.attr_name: attr_value
    resources:
      limits:
        memory: 1Gi
        cpu: 800m
    nodeCount: 0
  # dedicated data nodes
  - config:
      node.master: false
      node.data: true
      node.ingest: false
      node.attr.attr_name: attr_value
    resources:
      limits:
        memory: 1Gi
        cpu: 800m
    nodeCount: 0
  expose: LoadBalancer
---
apiVersion: kibana.k8s.elastic.co/v1alpha1
kind: Kibana
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: kibana-sample
spec:
  version: "6.7.0"
  nodeCount: 1
  expose: LoadBalancer
