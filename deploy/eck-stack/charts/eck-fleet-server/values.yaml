---
# Default values for eck-fleet-server.
# This is a YAML-formatted file.

# Overridable names of the Fleet Server resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-fleet-server'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
# nameOverride: "quickstart"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Fleet Server resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Elastic Fleet Server.
#
version: 8.17.0

# Labels that will be applied to Elastic Fleet Server.
#
labels: {}

# Annotations that will be applied to Elastic Fleet Server.
#
annotations: {}

# Elastic Fleet Server Agent image to deploy.
#
# image: docker.elastic.co/beats/elastic-agent:8.17.0-SNAPSHOT

# ** Deprecation Notice **
# The previous versions of this Helm Chart simply used the `spec` field here
# and allowed the user to specify any fields below `spec` that were templated directly
# into the final Agent/Fleet Server manifest. This is no longer the preferred way to specify these
# fields and each field that is supported underneath `spec` is now directly specified
# in this values file. Currently both patterns are supported for backwards compatibility
# but we plan to remove the `spec` field in the future.
# spec: {}

# Referenced resources are below and both elasticsearchRefs and kibanaRef are required for a functional Fleet Server.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-setting-referenced-resources
#
# Reference to ECK-managed Kibana instance.
# This is required for Fleet Server.
#
# kibanaRef:
#   name: quickstart
  # Optional namespace reference to Kibana instance.
  # If not specified, then the namespace of the Fleet Server resource
  # will be assumed.
  #
  # namespace: default

# Reference to ECK-managed Elasticsearch instance.
# This is required for Fleet Server.
#
elasticsearchRefs: []
# - name: eck-elasticsearch
  # Optional namespace reference to Elasticsearch instance.
  # If not specified, then the namespace of the Fleet Server resource
  # will be assumed.
  #
  # namespace: default

# policyID determines into which Agent Policy this Fleet Server will be enrolled.
policyID: eck-fleet-server

# The HTTP layer configuration for the Fleet Server Service.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-customize-fleet-server-service
#
# http:

# Deployment or StatefulSet specification for Fleet Server.
# At least one is required of [deployment, statefulSet].
# No default is currently set, refer to https://github.com/elastic/cloud-on-k8s/issues/7429.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-chose-the-deployment-model
#
# deployment:
#   replicas: 1
#   podTemplate:
#     spec:
#       serviceAccountName: fleet-server
#       automountServiceAccountToken: true
#
# statefulSet:
#   podTemplate:
#     spec:
#       serviceAccountName: fleet-server
#       automountServiceAccountToken: true

# Number of revisions to retain to allow rollback in the underlying Deployment.
# If not set Kubernetes sets this to 10 by default.
#
# revisionHistoryLimit: 2

# ServiceAccount to be used by Elastic Fleet Server. Some Fleet Server features (such as autodiscover or Kubernetes module metricsets)
# require that Fleet Server Pods interact with Kubernetes APIs. This functionality requires specific permissions
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
serviceAccount:
  name: fleet-server
  # namespace: optional-namespace

# ClusterRoleBinding to be used by Elastic Fleet Server. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
clusterRoleBinding:
  name: fleet-server
  subjects:
  - kind: ServiceAccount
    name: fleet-server
    # namespace: default
  roleRef:
    kind: ClusterRole
    name: fleet-server
    apiGroup: rbac.authorization.k8s.io

# ClusterRole to be used by Elastic Fleet Server. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-elastic-agent-fleet-configuration.html#k8s-elastic-agent-fleet-configuration-role-based-access-control
#
clusterRole:
  name: fleet-server
  rules:
  - apiGroups: [""]
    resources:
    - pods
    - namespaces
    - nodes
    verbs:
    - get
    - watch
    - list
  - apiGroups: ["apps"]
    resources:
      - replicasets
    verbs:
      - get
      - watch
      - list
  - apiGroups: ["batch"]
    resources:
      - jobs
    verbs:
      - get
      - watch
      - list
  - apiGroups: ["coordination.k8s.io"]
    resources:
    - leases
    verbs:
    - get
    - create
    - update
