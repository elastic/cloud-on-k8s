---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: {{ include "elasticagent.fullname" . }}
  labels:
    {{- include "elasticagent.labels" $ | nindent 4 }}
  annotations:
    eck.k8s.elastic.co/license: basic
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  version: {{ required "An Elastic Agent version is required" (or ((.Values.spec).version) (.Values.version)) }}
  {{- $daemonSet := (or (hasKey (.Values.spec) "daemonSet") (hasKey .Values "daemonSet")) }}
  {{- $deployment := (or (hasKey (.Values.spec) "deployment") (hasKey .Values "deployment")) }}
  {{- $statefulSet := (or (hasKey (.Values.spec) "statefulSet") (hasKey .Values "statefulSet")) }}
  {{- if and (not $daemonSet) (not $deployment) (not $statefulSet) }}
  {{ fail "At least one of daemonSet, deployment or statefulSet is required" }}
  {{- end }}
  {{- if $daemonSet }}
  {{- $ds := or ((.Values.spec).daemonSet) (.Values.daemonSet) }}
  daemonSet:
    {{- /* This is required to render the empty daemonset ( {} ) properly */}}
    {{- $ds | default dict | toYaml | nindent 4 }}
  {{- end }}
  {{- if $deployment }}
  {{- $deploy := or ((.Values.spec).deployment) (.Values.deployment) }}
  deployment:
    {{- /* This is required to render the empty deployment ( {} ) properly */}}
    {{- $deploy | default dict | toYaml | nindent 4 }}
  {{- end }}
  {{- if $statefulSet }}
  {{- $sts := or ((.Values.spec).statefulSet) (.Values.statefulSet) }}
  statefulSet:
    {{- /* This is required to render the empty statefulSet ( {} ) properly */}}
    {{- $sts | default dict | toYaml | nindent 4 }}
  {{- end }}
  {{- with or ((.Values.spec).image) (.Values.image) }}
  image: {{ . }}
  {{- end }}
  {{- with or ((.Values.spec).elasticsearchRefs) (.Values.elasticsearchRefs) }}
  elasticsearchRefs:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with or ((.Values.spec).kibanaRef) (.Values.kibanaRef) }}
  kibanaRef:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with or ((.Values.spec).fleetServerRef) (.Values.fleetServerRef) }}
  fleetServerRef:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- $config := or ((.Values.spec).config) (.Values.config) }}
  {{- $configRef := or ((.Values.spec).configRef) (.Values.configRef) }}
  {{- if and $config $configRef }}
  {{ fail "Only one of config and configRef can be specified" }}
  {{- end }}
  {{- with $config }}
  config:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $configRef }}
  configRef:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with or ((.Values.spec).mode) (.Values.mode) }}
  mode: {{ . }}
  {{- end }}
  {{- with or ((.Values.spec).fleetServerEnabled) (.Values.fleetServerEnabled) }}
  fleetServerEnabled: {{ . }}
  {{- end }}
  {{- with or ((.Values.spec).http) (.Values.http) }}
  http:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with or ((.Values.spec).policyID) (.Values.policyID) }}
  policyID: {{ . }}
  {{- end }}
  {{- with or ((.Values.spec).secureSettings) (.Values.secureSettings) }}
  secureSettings:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with or ((.Values.spec).revisionHistoryLimit) (.Values.revisionHistoryLimit) }}
  revisionHistoryLimit: {{ . }}
  {{- end }}
  {{- with or (((.Values.spec).serviceAccount).name) ((.Values.serviceAccount).name) }}
  serviceAccountName: {{ . }}
  {{- end }}
