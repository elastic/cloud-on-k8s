---
# The following is an example of an Elasticsearch resource that is configured to use an Ingress resource in an EKS cluster
# which provisions an application load balancer.
#
ingress:
  enabled: true
  className: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/backend-protocol: "HTTPS"
    alb.ingress.kubernetes.io/target-type: "ip"
    # To use an ALB with ECK, you must provide a valid ACM certificate ARN or use certificate discovery.
    # There are 2 options for EKS:
    # 1. Create a valid ACM certificate, and uncomment the following annotation and update it to the correct ARN.
    # 2. Create a valid ACM certificate and ensure that the hosts[0].host matches the certificate's Common Name (CN) and
    #    certificate discovery *should* find the certificate automatically and use it.
    #
    # ref: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.8/guide/ingress/cert_discovery/
    #
    # alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-east-1:00000000000:certificate/b65be571-8220-4f2e-8cb1-94194535d877"
  labels:
    my: label
  pathType: Prefix
  hosts:
  - host: "elasticsearch.company.dev"
  path: "/"
nodeSets:
- name: default
  count: 3
  # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
  # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
  # and leave node.store.allow_mmap unset.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
  #
  config:
    node.store.allow_mmap: false
