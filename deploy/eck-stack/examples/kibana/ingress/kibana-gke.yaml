# The following is an example of a Kibana resource that is configured to use an Ingress resource in a GKE cluster.
# Additional examples of exposing Kibana with Ingress resources can be found in the following location:
# https://github.com/elastic/cloud-on-k8s/tree/main/deploy/eck-stack/charts/eck-kibana/examples/ingress
#
eck-elasticsearch:
  enabled: true

  # Name of the Elasticsearch instance.
  #
  fullnameOverride: elasticsearch  

  ingress:
    enabled: true
    annotations:
      my: annotation
    labels:
      my: label
    pathType: Prefix
    hosts:
    - host: "kibana.company.dev"
      path: "/"
    tls: true

  http:
    service:
      metadata:
        annotations:
          # This is required for `ClusterIP` services (which are the default ECK service type) to be used with Ingress in GKE clusters.
          cloud.google.com/neg: '{"ingress": true}'
          cloud.google.com/app-protocols: '{"https":"HTTPS"}'
          cloud.google.com/backend-config: '{"default": "elasticsearch"}'

  nodeSets:
  - name: default
    count: 3
    # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
    # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
    # and leave node.store.allow_mmap unset.
    # ref: https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
    #
    config:
      node.store.allow_mmap: false
      # Enable anonymous access to allow GCLB health probes to succeed
      xpack.security.authc:
        anonymous:
          username: anon
          roles: monitoring_user

eck-kibana:
  enabled: true

  # Name of the Kibana instance.
  #
  fullnameOverride: kibana
  
  spec:
    # Reference to ECK-managed Elasticsearch instance, ideally from {{ "elasticsearch.fullname" }}
    #
    elasticsearchRef:
      name: elasticsearch

    config:
      server:
        publicBaseUrl: "https://kibana.company.dev"

    http:
      service:
        metadata:
          annotations:
            # This is required for `ClusterIP` services (which are the default ECK service type) to be used with Ingress in GKE clusters.
            cloud.google.com/neg: '{"ingress": true}'
            cloud.google.com/app-protocols: '{"https":"HTTPS"}'
            cloud.google.com/backend-config: '{"default": "kibana"}'
  
  ingress:
    enabled: true
    pathType: Prefix
    hosts:
    - host: "kibana.company.dev"
      path: "/"
    tls: true
