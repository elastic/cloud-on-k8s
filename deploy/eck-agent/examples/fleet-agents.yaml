# The following example should only be used in conjunction with the 'eck-fleet-server' Helm Chart,
# and shows how the Agents can be deployed as a daemonset, and controlled by Fleet Server.
#
version: 8.2.3

spec:
  # This must match the name of the fleet server installed from eck-fleet-server chart.
  fleetServerRef:
    name: fleet-server
  kibanaRef:
    name: eck-kibana
  mode: fleet
  # config needs to be disabled when fleet mode is enabled.
  config: null
  # elasticsearchRefs must be empty when fleet mode is enabled.
  elasticsearchRefs: []

  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        hostNetwork: true
        dnsPolicy: ClusterFirstWithHostNet
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0

serviceAccount:
  name: elastic-agent

clusterRole:
  name: elastic-agent
  rules:
  - apiGroups: [""]
    resources:
    - pods
    - nodes
    - namespaces
    - events
    - services
    - configmaps
    verbs:
    - get
    - watch
    - list
  - apiGroups: ["coordination.k8s.io"]
    resources:
    - leases
    verbs:
    - get
    - create
    - update
  - nonResourceURLs:
    - "/metrics"
    verbs:
    - get
  - apiGroups: ["extensions"]
    resources:
      - replicasets
    verbs: 
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - "apps"
    resources:
    - statefulsets
    - deployments
    - replicasets
    verbs:
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - get
  - apiGroups:
    - "batch"
    resources:
    - jobs
    verbs:
    - "get"
    - "list"
    - "watch"

clusterRoleBinding:
  name: elastic-agent
  subjects:
  - kind: ServiceAccount
    name: elastic-agent
    namespace: default
  roleRef:
    kind: ClusterRole
    name: elastic-agent
    apiGroup: rbac.authorization.k8s.io
