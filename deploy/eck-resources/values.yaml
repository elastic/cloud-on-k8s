# Global settings that will be applied to all resources (Elasticsearch/Kibana/etc)
# Likely needs to be renamed, as this is a reserved keyword.
#
global:
  # Labels that will be applied to all created resources.
  #
  labels: {}
    # key: value

  # Annotations that will be applied to all created cresources.
  #
  annotations: {}
    # key: value

# Configuration specific to Elasticsearch.
#
elasticsearch:
  # Whether to install an Elasticsearch cluster.
  #
  enabled: true

  # Name of the Elasticsearch cluster.
  #
  name: "quickstart"

  # Version of Elasticsearch.
  #
  version: 8.2.0

  # Labels that will be applied to Elasticsearch.
  #
  labels: {}
    # key: value

  # Annotations that will be applied to Elasticsearch.
  #
  annotations: {}
    # key: value

  topology:
    enabledTiers:
    - "quickstart"
    # - "master"
    # - "data_hot"
    # - "data_cold"
    # - "data_frozen"
    # - "data_content"
    # - "ml"
    # - "ingest"
    configurations:
    - name: quickstart
      count: 1
      config:
        node.roles: ["master", "data", "ingest"]
        node.store.allow_mmap: false
      podTemplate:
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 1Gi
                cpu: 1
              limits:
                memory: 1Gi
                cpu: 1
      volumeClaimTemplates:
      - metadata:
          # The name of this volume must always be 'elasticsearch-data'.
          #
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
          storageClassName: standard
    - name:  master
      count: 3
      config:
        node.roles: ["master"]
      podTemplate:
        metadata:
          labels: {}
          annotations: {}
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 2Gi
                cpu: 1
              limits:
                memory: 2Gi
                cpu: 1
      volumeClaimTemplates:
      - metadata:
          # The name of this volume must always be 'elasticsearch-data'.
          #
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
          storageClassName: standard
    - name: data_hot
      count: 3
      config:
        node.roles: ["master"]
      podTemplate:
        metadata:
          labels: {}
          annotations: {}
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 2Gi
                cpu: 1
              limits:
                memory: 2Gi
                cpu: 1
      volumeClaimTemplates:
      - metadata:
          # The name of this volume must always be 'elasticsearch-data'.
          #
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
          storageClassName: standard
    - name: data_cold
      count: 3
      config:
        node.roles: ["master"]
      podTemplate:
        metadata:
          labels: {}
          annotations: {}
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 2Gi
                cpu: 1
              limits:
                memory: 2Gi
                cpu: 1
      volumeClaimTemplates:
      - metadata:
          # The name of this volume must always be 'elasticsearch-data'.
          #
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
          storageClassName: standard
    - name: data_frozen
      count: 3
      config:
        node.roles: ["master"]
      podTemplate:
        metadata:
          labels: {}
          annotations: {}
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 2Gi
                cpu: 1
              limits:
                memory: 2Gi
                cpu: 1
      volumeClaimTemplates:
      - metadata:
          # The name of this volume must always be 'elasticsearch-data'.
          #
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
          storageClassName: standard
    - name: data_content
      count: 3
      config:
        node.roles: ["master"]
      podTemplate:
        metadata:
          labels: {}
          annotations: {}
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 2Gi
                cpu: 1
              limits:
                memory: 2Gi
                cpu: 1
      volumeClaimTemplates:
      - metadata:
          # The name of this volume must always be 'elasticsearch-data'.
          #
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
          storageClassName: standard
    - name: ml
      count: 3
      config:
        node.roles: ["master"]
      podTemplate:
        metadata:
          labels: {}
          annotations: {}
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 2Gi
                cpu: 1
              limits:
                memory: 2Gi
                cpu: 1
      volumeClaimTemplates:
      - metadata:
          # The name of this volume must always be 'elasticsearch-data'.
          #
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
          storageClassName: standard
    - name: ingest
      count: 3
      config:
        node.roles: ["master"]
      podTemplate:
        metadata:
          labels: {}
          annotations: {}
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 2Gi
                cpu: 1
              limits:
                memory: 2Gi
                cpu: 1
      volumeClaimTemplates:
      - metadata:
          # The name of this volume must always be 'elasticsearch-data'.
          #
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
          storageClassName: standard

# Configuration specific to Kibana.
#
kibana:
  # Whether to install a Kibana instance.
  #
  enabled: true

  # Name of the Kibana instance.
  #
  name: "quickstart"

  # Version of Kibana.
  #
  version: 8.2.0

  # Labels that will be applied to Kibana.
  #
  labels: {}
    # key: value

  # Annotations that will be applied to Kibana.
  #
  annotations: {}
    # key: value

  spec:
    # Count of Kibana instances to create.
    #
    count: 1

    # Reference to ECK-managed Elasticsearch instanced, ideally from {{ .Values.elasticsearch.name }}
    #
    elasticsearchRef:
      name: quickstart
      # Optional namespace reference to Elasticsearch instance.
      # If not specified, then {{ .Release.Namespace }} will be used.
      #
      # namespace: default