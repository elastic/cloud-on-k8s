# TODO:
# 1) Verify Openshift support
# 2) Verify support of PSPs/SCCs

# Global settings that will be applied to all resources (Elasticsearch/Kibana/etc)
#
global:
  ## Reference to one or more secrets to be used when pulling images.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  imagePullSecrets:
  - name: "image-pull-secret"

  # Labels that will be applied to all created resources.
  #
  labels: {}
    # key: value

  # Annotations that will be applied to all created cresources.
  #
  annotations: {}
    # key: value

# Configuration specific to Elasticsearch.
#
elasticsearch:
  # Whether to install an Elasticsearch cluster.
  #
  enabled: true

  # Name of the Elasticsearch cluster.
  #
  name: "quickstart"

  # Image settings to control what Elasticsearch container to run.
  #
  image: {}
    # repository: docker.elastic.co/elasticsearch/elasticsearch
    # tag: "8.2.0"

  # Version of Elasticsearch.
  version: 7.16.0

  # Labels that will be applied to Elasticsearch.
  #
  labels: {}
    # key: value

  # Annotations that will be applied to Elasticsearch.
  #
  annotations: {}
    # key: value

  # Service account settings for Elasticsearch.
  #
  serviceAccount:
    # The name of the service account to use.
    # If not set, a default name will be used.
    #
    name: ""

  # Authentication settings for Users/Roles.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-users-and-roles.html
  #
  auth: {}
    # fileRealm:
    # - secretName: my-filerealm-secret-1
    # - secretName: my-filerealm-secret-2
  
  # Control Elasticsearch Secure Settings.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-es-secure-settings.html#k8s-es-secure-settings
  #
  secureSettings: []
  # - secretName: one-secure-settings-secret

  # Settings to control how Elasticsearch will be accessed.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-accessing-elastic-services.html
  #
  # http:
  #   service:
  #     spec:
  #       type: ClusterIP
        # To add external cloud loadbalancer:
        # type: LoadBalancer
    # If using custom ssl certificate
    # tls:
      # certificate:
        # Bringing your own certificate:
        # secretName: my-secret-name
      # Controlling the self signed certificate that is used:
      # selfSignedCertificate:
        # subjectAltNames:
        # - ip: 160.46.176.15
        # - dns: hulk.example.com

  # Control the Elasticsearch transport module used for internal communication between nodes.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-transport-settings.html
  #
  transport:
    service:
      # metadata: {}
        # labels:
        #   my-custom: label
      spec:
        type: ClusterIP
        ports:
        - name: tls-transport
          port: 9302
          protocol: TCP
          targetPort: 9302

  # Controlling of advanced zone awareness settings within Kubernetes, which allow you to automatically
  # create an availability zone-aware Elasticsearch cluster.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-advanced-node-scheduling.html#k8s-availability-zone-awareness
  #
  zoneAwareness:
    enabled: false
    annotations:
      eck.k8s.elastic.co/downward-node-labels: "topology.kubernetes.io/zone"
    nodeSetConfiguration:
      cluster.routing.allocation.awareness.attributes: k8s_node_name,zone
      node.attr.zone: ${ZONE}
    env:
    - name: ZONE
      valueFrom:
        fieldRef:
          fieldPath: metadata.annotations['topology.kubernetes.io/zone']
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:  
          elasticsearch.k8s.elastic.co/cluster-name: elasticsearch-sample
          elasticsearch.k8s.elastic.co/statefulset-name: elasticsearch-sample-es-default

  # Settings for configuring stack monitoring.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-stack-monitoring.html
  #
  monitoring: {}
    # metrics:
    #   elasticsearchRefs:
    #   - name: monitoring
    #     namespace: observability
    # logs:
    #   elasticsearchRefs:
    #   - name: monitoring
    #     namespace: observability

  # Settings for limiting the number of simultaneous changes to an Elasticsearch cluster.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-update-strategy.html
  #
  # The default are the default settings for ECK.
  #
  updateStrategy: {}
    # changeBudget:
    #   maxSurge: -1
    #   maxUnavailable: 1

  # Limiting the disruption to your Elasticsearch cluster's pods.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-pod-disruption-budget.html
  #
  podDisruptionBudget: {}
    # spec:
    #   minAvailable: 2
    #   selector:
    #     matchLabels:
    #       elasticsearch.k8s.elastic.co/cluster-name: quickstart

  # Controlling of connectivity between remote clusters within the same kubernetes cluster.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-remote-clusters.html
  #
  remoteClusters: []
  # - name: cluster-two
  #   elasticsearchRef:
  #     name: cluster-two
  #     namespace: ns-two 

  # Control when volume claims are deleted.
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/2.2/k8s-volume-claim-templates.html#k8s_controlling_volume_claim_deletion
  #
  volumeClaimDeletePolicy: "DeleteOnScaledownAndClusterDeletion"

  # Node configuration settings.
  # The node roles which can be configured here are:
  # - "master"
  # - "data_hot"
  # - "data_cold"
  # - "data_frozen"
  # - "data_content"
  # - "ml"
  # - "ingest"
  # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-node-configuration.html
  #
  nodeSets:
  - name: master
    config:
      node.roles: ["master"]
      node.store.allow_mmap: false
      transport.compress: true
      transport.port: 9302
      # xpack.http.ssl.verification_mode: none
      # xpack.security.audit.enabled: true
      # xpack.security.authc.token.enabled: true
    count: 1
    podTemplate:
      # Setting of custom labels and annotations on pods created by ECK.
      # ref: https://www.elastic.co/guide/en/cloud-on-k8s/latest/k8s-customize-pods.html
      metadata: {}
        # labels:
        #   my.custom.domain/label: "label-value"
        # annotations:
        #   my.custom.domain/annotation: "annotation-value"
      spec:
        containers:
        # Settings related to the default 'elasticsearch' container.
        #
        - name: elasticsearch
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 2
              memory: 4Gi
          # readinessProbe:
          #   exec:
          #     command:
          #     - bash
          #     - -c
          #     - /mnt/elastic-internal/scripts/readiness-probe-script.sh
          #   failureThreshold: 3
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          #   successThreshold: 1
          #   timeoutSeconds: 5
          env:
          - name: ES_JAVA_OPTS
            value: -Xms4g -Xmx4g
        initContainers:
        # Configuration for Elasticsearch's virtual memory settings.
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-virtual-memory.html#k8s-virtual-memory
        #
        - name: sysctl
          command:
          - sh
          - "-c"
          - sysctl -w vm.max_map_count=262144
          securityContext:
            privileged: true
            runAsUser: 0

        # Configuration for Elasticsearch plugins.
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-init-containers-plugin-downloads.html
        #
        - name: install-plugins
        #   command:
        #   - sh
        #   - "-c"
        #   - bin/elasticsearch-plugin install --batch repository-s3

        # Taints/tolerations configuration.
        # ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
        #
        tolerations: {}
        #   - key: "node-role.kubernetes.io/master"
        #     effect: "NoSchedule"
        #     operator: "Exists"

        # Affinity/Anti-affinity settings for controlling the 'spreading' of Elasticsearch
        # pods across existing hosts.
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-advanced-node-scheduling.html#k8s-affinity-options
        #
        affinity: {}
        # The below settings are the default settings for an Elasticsearch cluster controller by the ECK operator.
        #   podAntiAffinity:
        #     preferredDuringSchedulingIgnoredDuringExecution:
        #     - weight: 100
        #       podAffinityTerm:
        #         labelSelector:
        #           matchLabels:
        #             elasticsearch.k8s.elastic.co/cluster-name: quickstart
        #         topologyKey: kubernetes.io/hostname

        # Controlling to which nodes the Elasticsearch pods are assigned.
        # ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
        #
        nodeSelector: {}
          # topology.kubernetes.io/zone: us-central1-c
          # cloud.google.com/gke-nodepool: pool-1

        # Privilege and access control settings for the Elasticsearch Pods.
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/2.2/k8s-security-context.html
        #
        securityContext: {}
          # fsGroup: 0
          # runAsUser: 1000
          # runAsGroup: 0

    # Volume Claim settings.
    # ref: https://www.elastic.co/guide/en/cloud-on-k8s/2.2/k8s-volume-claim-templates.html
    #
    volumeClaimTemplates:
    - metadata:
        # The name of this volume must always be 'elasticsearch-data'.
        #
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard
  - name: hot-node
    config:
      node.roles: ["data_hot", "ingest", "data_content"]
      node.store.allow_mmap: false
      transport.compress: true
    count: 3
    podTemplate:
      # Setting of custom labels and annotations on pods created by ECK.
      # ref: https://www.elastic.co/guide/en/cloud-on-k8s/latest/k8s-customize-pods.html
      metadata: {}
        # labels:
        #   my.custom.domain/label: "label-value"
        # annotations:
        #   my.custom.domain/annotation: "annotation-value"
      spec:
        containers:
        # Settings related to the default 'elasticsearch' container.
        #
        - name: elasticsearch
          resources:
            requests:
              cpu: 2
              memory: 8Gi
            limits:
              cpu: 4
              memory: 16Gi
          # readinessProbe:
          #   exec:
          #     command:
          #     - bash
          #     - -c
          #     - /mnt/elastic-internal/scripts/readiness-probe-script.sh
          #   failureThreshold: 3
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          #   successThreshold: 1
          #   timeoutSeconds: 5
          env:
          - name: ES_JAVA_OPTS
            value: -Xms16g -Xmx16g
        initContainers:
        # Configuration for Elasticsearch's virtual memory settings.
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-virtual-memory.html#k8s-virtual-memory
        #
        - name: sysctl
          command:
          - sh
          - "-c"
          - sysctl -w vm.max_map_count=262144
          securityContext:
            privileged: true
            runAsUser: 0

        # Configuration for Elasticsearch plugins.
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-init-containers-plugin-downloads.html
        #
        - name: install-plugins
        #   command:
        #   - sh
        #   - "-c"
        #   - bin/elasticsearch-plugin install --batch repository-s3

        # Taints/tolerations configuration.
        # ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
        #
        tolerations: {}
        #   - key: "node-role.kubernetes.io/master"
        #     effect: "NoSchedule"
        #     operator: "Exists"

        # Affinity/Anti-affinity settings for controlling the 'spreading' of Elasticsearch
        # pods across existing hosts.
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-advanced-node-scheduling.html#k8s-affinity-options
        #
        affinity: {}
        # The below settings are the default settings for an Elasticsearch cluster controller by the ECK operator.
        #   podAntiAffinity:
        #     preferredDuringSchedulingIgnoredDuringExecution:
        #     - weight: 100
        #       podAffinityTerm:
        #         labelSelector:
        #           matchLabels:
        #             elasticsearch.k8s.elastic.co/cluster-name: quickstart
        #         topologyKey: kubernetes.io/hostname

        # Controlling to which nodes the Elasticsearch pods are assigned.
        # ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
        #
        nodeSelector: {}
          # topology.kubernetes.io/zone: us-central1-c
          # cloud.google.com/gke-nodepool: pool-1

        # Privilege and access control settings for the Elasticsearch Pods.
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/2.2/k8s-security-context.html
        #
        securityContext: {}
          # fsGroup: 0
          # runAsUser: 1000
          # runAsGroup: 0

    # Volume Claim settings.
    # ref: https://www.elastic.co/guide/en/cloud-on-k8s/2.2/k8s-volume-claim-templates.html
    #
    volumeClaimTemplates:
    - metadata:
        # The name of this volume must always be 'elasticsearch-data'.
        #
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 400Gi
        storageClassName: standard
